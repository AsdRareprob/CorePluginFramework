// Generated by Dagger (https://dagger.dev).
package com.rareprob.core_pulgin.core.notification;

import com.rareprob.core_pulgin.core.base.CoreDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationViewModel_Factory implements Factory<NotificationViewModel> {
  private final Provider<CoreDatabase> coreDatabaseProvider;

  public NotificationViewModel_Factory(Provider<CoreDatabase> coreDatabaseProvider) {
    this.coreDatabaseProvider = coreDatabaseProvider;
  }

  @Override
  public NotificationViewModel get() {
    return newInstance(coreDatabaseProvider.get());
  }

  public static NotificationViewModel_Factory create(Provider<CoreDatabase> coreDatabaseProvider) {
    return new NotificationViewModel_Factory(coreDatabaseProvider);
  }

  public static NotificationViewModel newInstance(CoreDatabase coreDatabase) {
    return new NotificationViewModel(coreDatabase);
  }
}
