// Generated by Dagger (https://dagger.dev).
package com.rareprob.core_pulgin.plugins.reward.presentation.activity;

import com.rareprob.core_pulgin.plugins.reward.domain.repository.RewardRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RewardBaseActivity_MembersInjector implements MembersInjector<RewardBaseActivity> {
  private final Provider<RewardRepository> repositoryProvider;

  public RewardBaseActivity_MembersInjector(Provider<RewardRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  public static MembersInjector<RewardBaseActivity> create(
      Provider<RewardRepository> repositoryProvider) {
    return new RewardBaseActivity_MembersInjector(repositoryProvider);
  }

  @Override
  public void injectMembers(RewardBaseActivity instance) {
    injectRepository(instance, repositoryProvider.get());
  }

  @InjectedFieldSignature("com.rareprob.core_pulgin.plugins.reward.presentation.activity.RewardBaseActivity.repository")
  public static void injectRepository(RewardBaseActivity instance, RewardRepository repository) {
    instance.repository = repository;
  }
}
