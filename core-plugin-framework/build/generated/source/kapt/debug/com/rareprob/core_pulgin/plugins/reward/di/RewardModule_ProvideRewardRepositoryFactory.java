// Generated by Dagger (https://dagger.dev).
package com.rareprob.core_pulgin.plugins.reward.di;

import com.rareprob.core_pulgin.plugins.reward.domain.repository.RewardRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RewardModule_ProvideRewardRepositoryFactory implements Factory<RewardRepository> {
  @Override
  public RewardRepository get() {
    return provideRewardRepository();
  }

  public static RewardModule_ProvideRewardRepositoryFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static RewardRepository provideRewardRepository() {
    return Preconditions.checkNotNullFromProvides(RewardModule.INSTANCE.provideRewardRepository());
  }

  private static final class InstanceHolder {
    private static final RewardModule_ProvideRewardRepositoryFactory INSTANCE = new RewardModule_ProvideRewardRepositoryFactory();
  }
}
