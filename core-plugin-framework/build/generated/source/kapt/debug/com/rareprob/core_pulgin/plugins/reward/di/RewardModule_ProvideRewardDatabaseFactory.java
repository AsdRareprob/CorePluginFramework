// Generated by Dagger (https://dagger.dev).
package com.rareprob.core_pulgin.plugins.reward.di;

import android.app.Application;
import com.rareprob.core_pulgin.plugins.reward.data.local.RewardDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RewardModule_ProvideRewardDatabaseFactory implements Factory<RewardDatabase> {
  private final Provider<Application> appProvider;

  public RewardModule_ProvideRewardDatabaseFactory(Provider<Application> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public RewardDatabase get() {
    return provideRewardDatabase(appProvider.get());
  }

  public static RewardModule_ProvideRewardDatabaseFactory create(
      Provider<Application> appProvider) {
    return new RewardModule_ProvideRewardDatabaseFactory(appProvider);
  }

  public static RewardDatabase provideRewardDatabase(Application app) {
    return Preconditions.checkNotNullFromProvides(RewardModule.INSTANCE.provideRewardDatabase(app));
  }
}
